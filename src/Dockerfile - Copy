# Stage 1: Clone the repository
FROM mcr.microsoft.com/dotnet/sdk:9.0.301 AS source
WORKDIR /source

RUN apt-get update && \
    apt-get install -y git && \
    rm -rf /var/lib/apt/lists/*

COPY ./ .

# Stage 3: Build and Publish WASM App
FROM mcr.microsoft.com/dotnet/sdk:9.0.301 AS base
WORKDIR /source
COPY --from=source /source .

# Install OpenSSL for cryptographic operations
RUN apt-get update && apt-get install -y openssl && rm -rf /var/lib/apt/lists/*

# Ensure WASM tools are installed
RUN dotnet workload install wasm-tools

FROM base AS publish
WORKDIR /source

# Publish Blazor WASM application
RUN dotnet publish Angor/Client/Angor.Client.csproj \
    -c Debug \
    -p:PublishTrimmed=false \
    -o /app \
    --verbosity minimal

FROM mcr.microsoft.com/dotnet/runtime:9.0

# Install Nginx
RUN apt-get update && apt-get install -y nginx && apt-get clean

COPY --from=publish /app/wwwroot /var/www/html/

# Nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
#COPY nginx.conf /etc/nginx/conf.d/

RUN ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log

# Expose port 80 (proxy will handle SSL)
#EXPOSE 80
#EXPOSE 5005

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
