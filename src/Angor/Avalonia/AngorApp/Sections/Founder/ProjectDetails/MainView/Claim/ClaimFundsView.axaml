<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:design="clr-namespace:AngorApp.Design"
             xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Collections"
             xmlns:controls="clr-namespace:AngorApp.UI.Controls"
             xmlns:ui="clr-namespace:Zafiro.UI;assembly=Zafiro.UI"
             xmlns:claim="clr-namespace:AngorApp.Sections.Founder.ProjectDetails.MainView.Claim"
             mc:Ignorable="d" d:DesignWidth="400"
             x:Class="AngorApp.Sections.Founder.ProjectDetails.MainView.Claim.ClaimFundsView" x:DataType="claim:IClaimFundsViewModel">

    <Design.DataContext>
        <claim:ClaimFundsViewModelDesign>
            <claim:ClaimFundsViewModelDesign.ClaimableStages>
                <generic:List x:TypeArguments="claim:IClaimableStage">
                    <claim:ClaimableStageDesign>
                        <claim:ClaimableStageDesign.Transactions>
                            <generic:List x:TypeArguments="claim:IClaimableTransaction">
                                <claim:ClaimableTransactionDesign ClaimStatus="Pending" Address="bc1qexampleaddress1">
                                    <claim:ClaimableTransactionDesign.Amount>
                                        <design:DesignTimeAmount Sats="1000000" />
                                    </claim:ClaimableTransactionDesign.Amount>
                                </claim:ClaimableTransactionDesign>
                                <claim:ClaimableTransactionDesign ClaimStatus="WithdrawByInvestor" Address="bc1qexampleaddress2">
                                    <claim:ClaimableTransactionDesign.Amount>
                                        <design:DesignTimeAmount Sats="2000000" />
                                    </claim:ClaimableTransactionDesign.Amount>
                                </claim:ClaimableTransactionDesign>
                                <claim:ClaimableTransactionDesign ClaimStatus="SpentByFounder" Address="bc1qexampleaddress3">
                                    <claim:ClaimableTransactionDesign.Amount>
                                        <design:DesignTimeAmount Sats="300000" />
                                    </claim:ClaimableTransactionDesign.Amount>
                                </claim:ClaimableTransactionDesign>
                                <claim:ClaimableTransactionDesign ClaimStatus="Unspent" Address="bc1qexampleaddress4">
                                    <claim:ClaimableTransactionDesign.Amount>
                                        <design:DesignTimeAmount Sats="300000" />
                                    </claim:ClaimableTransactionDesign.Amount>
                                </claim:ClaimableTransactionDesign>
                                <claim:ClaimableTransactionDesign ClaimStatus="Unspent" Address="bc1qexampleaddress5">
                                    <claim:ClaimableTransactionDesign.Amount>
                                        <design:DesignTimeAmount Sats="3440000" />
                                    </claim:ClaimableTransactionDesign.Amount>
                                </claim:ClaimableTransactionDesign>
                            </generic:List>
                        </claim:ClaimableStageDesign.Transactions>
                    </claim:ClaimableStageDesign>
                    <claim:ClaimableStageDesign>
                    </claim:ClaimableStageDesign>
                    <claim:ClaimableStageDesign>
                    </claim:ClaimableStageDesign>
                </generic:List>
            </claim:ClaimFundsViewModelDesign.ClaimableStages>
        </claim:ClaimFundsViewModelDesign>
    </Design.DataContext>

    <UserControl.Resources>
        <ControlTheme x:Key="TransactionItemTheme" BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
            <Setter Property="Interaction.Behaviors">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <DataTriggerBehavior Binding="{Binding ClaimStatus, DataType=claim:IClaimableTransaction}" Value="Unspent" ComparisonCondition="NotEqual">
                            <ChangeAvaloniaPropertyAction TargetObject="{Binding $parent[ListBoxItem]}" TargetProperty="{x:Static InputElement.IsEnabledProperty}"
                                                          Value="False" />
                        </DataTriggerBehavior>
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </ControlTheme>
    </UserControl.Resources>

    <Loading IsLoading="{Binding LoadClaimableStages.IsExecuting^}" LoadingText="Loading claimable stages...">
        <HeaderedContainer Header="Claim your funds" Classes="Title" Padding="0">
            <ItemsControl VerticalAlignment="Top" ItemsSource="{Binding ClaimableStages}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Classes="BigGap" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Styles>
                    <Style Selector="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </ItemsControl.Styles>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="claim:IClaimableStage">
                        <Card HeaderStartContent="{ItemIndex StartFromOne=True, StringFormat='Stage {0}'}" Theme="{StaticResource WideCard}">
                            <Card.HeaderEndContent>
                                <ToggleButton HorizontalAlignment="Stretch" Theme="{StaticResource ExpandingToggleButton}" Padding="10" x:Name="ToggleButton" />
                            </Card.HeaderEndContent>
                            <Card.Header>
                                <StackPanel Orientation="Horizontal" Spacing="10">
                                    <controls:Badge TextElement.FontWeight="Regular" FontSize="12" Color="DeepSkyBlue" Content="{Binding ClaimableAmount.DecimalString}" />
                                    <controls:Badge TextElement.FontWeight="Regular" FontSize="12" Color="Goldenrod" Content="{Binding ClaimableTransactionsCount, StringFormat='{}{0} UTXO'}" />
                                </StackPanel>
                            </Card.Header>
                            <DockPanel IsVisible="{Binding #ToggleButton.IsChecked}">
                                <ReactiveIconButton Icon="{Icon svg:/Assets/claim.svg}" Padding="15 10" Margin="0 20 0 0" HorizontalAlignment="Right" Command="{Binding Claim}" Content="Claim Selected Coins" DockPanel.Dock="Bottom" />
                                <StackPanel DockPanel.Dock="Top" Margin="0 10" Orientation="Horizontal" Spacing="10">
                                    <IconButton IsVisible="{Binding $self.IsEffectivelyEnabled}" Command="{Binding ReactiveSelection.SelectAll}" Classes="Small" Content="Select Claimable" DockPanel.Dock="Top">
                                        <IconButton.Icon>
                                            <ui:Icon Source="mdi-checkbox-multiple-outline" />
                                        </IconButton.Icon>
                                    </IconButton>
                                    <IconButton IsVisible="{Binding $self.IsEffectivelyEnabled}" Command="{Binding ReactiveSelection.Clear}" Classes="Small" Content="Clear Selection">
                                        <IconButton.Icon>
                                            <ui:Icon Source="mdi-checkbox-multiple-blank-outline" />
                                        </IconButton.Icon>
                                    </IconButton>
                                </StackPanel>
                                <ListBox Classes="Rounded" x:Name="ListBox" Selection="{Binding ReactiveSelection.SelectionModel}" ItemsSource="{Binding Transactions}"
                                         Grid.IsSharedSizeScope="True" ItemContainerTheme="{StaticResource TransactionItemTheme}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid ColumnSpacing="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Amount" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Badge" />
                                                </Grid.ColumnDefinitions>
                                                <CheckBox VerticalAlignment="Center"
                                                          IsChecked="{Binding $parent[ListBoxItem].IsSelected}" />
                                                <TextBlock Grid.Column="1" TextAlignment="Right" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Amount.DecimalString}" />
                                                <TextBlock Grid.Column="2" TextTrimming="{x:Static TextTrimming.CharacterEllipsis}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Address}" />
                                                <controls:Badge HorizontalAlignment="Stretch" Grid.Column="3" Tag="{Binding ClaimStatus}">
                                                    <controls:Badge.Styles>
                                                        <Style Selector="controls|Badge[Tag=Invalid]">
                                                            <Setter Property="Color" Value="Red" />
                                                            <Setter Property="Content" Value="-Invalid-" />
                                                        </Style>
                                                        <Style Selector="controls|Badge[Tag=Pending]">
                                                            <Setter Property="Color" Value="DodgerBlue" />
                                                            <Setter Property="Content" Value="Pending" />
                                                        </Style>
                                                        <Style Selector="controls|Badge[Tag=WithdrawByInvestor]">
                                                            <Setter Property="Color" Value="OrangeRed" />
                                                            <Setter Property="Content" Value="Withdrawn" />
                                                        </Style>
                                                        <Style Selector="controls|Badge[Tag=SpentByFounder]">
                                                            <Setter Property="Color" Value="Goldenrod" />
                                                            <Setter Property="Content" Value="Spent" />
                                                        </Style>
                                                        <Style Selector="controls|Badge[Tag=Unspent]">
                                                            <Setter Property="Color" Value="Green" />
                                                            <Setter Property="Content" Value="Unspent" />
                                                        </Style>
                                                    </controls:Badge.Styles>
                                                </controls:Badge>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </Card>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </HeaderedContainer>
    </Loading>
</UserControl>