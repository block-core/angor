@using Angor.Shared.Services
@using Angor.Client.Models
@using Angor.Client.Storage
@using System.Text.RegularExpressions
 

@inject IRelayService RelayService;
@inject IClientStorage Storage;
@inject IHtmlStripperService HtmlStripperService;



<div class="col d-flex align-items-stretch">
    <div class="card mt-4 w-100 project-card">
        <a class="d-block">

            <div class="banner-container">
                <img class="banner-image" src="@(FounderProject?.Metadata?.Banner ?? "/assets/img/no-image.jpg")" alt="@(@FounderProject?.Metadata?.Banner != null ? "" : "no-image")" onerror="this.onerror=null; this.src='/assets/img/no-image.jpg';" />
                <div class="profile-container">
                    <img class="profile-image" src="@(FounderProject?.Metadata?.Picture ?? "/assets/img/no-image.jpg")" alt="@(FounderProject?.Metadata?.Banner != null ? "" : "no-image")" onerror="this.onerror=null; this.src='/assets/img/no-image.jpg';" />
                </div>
            </div>

        </a>

        <div class="card-body pb-0">



            <div class="d-flex align-items-center mb-4">
                <span class="user-select-none">
                    <Icon IconName="view" Height="24" Width="24"></Icon>
                </span>
                <div class="h-100 ms-3">
                    <h5 class="mb-0 font-weight-bolder">
                        <a href="/view/@FounderProject.ProjectInfo.ProjectIdentifier"> @FounderProject.Metadata.Name</a>
                    </h5>
                </div>
            </div>
            <p class="mb-0 line-clamp-3">@(ConvertToMarkupString(FounderProject.Metadata.About))</p>



        </div>
        <div class="card-footer pt-0">
            <hr class="horizontal light mt-3">

            <a role="button" class="d-flex align-items-center btn btn-border w-100-m" href=@($"/view/{FounderProject.ProjectInfo.ProjectIdentifier}")>
                <span class="user-select-none">
                    <Icon IconName="view-project" Height="24" Width="24"></Icon>
                </span>
                <div class="h-100 ms-3">
                    <span class="mb-0 font-weight-bolder text-primary">
                        View Project
                    </span>
                </div>
            </a>
            @if (InvestmentRequests)
            {
                <hr class="horizontal light mt-3">
                <a role="button" class="d-flex align-items-center btn btn-border w-100-m" href=@($"/signatures/{FounderProject.ProjectInfo.ProjectIdentifier}")>
                    <span class="user-select-none">
                        <Icon IconName="check-circle" Height="24" Width="24"></Icon>
                    </span>
                    <div class="h-100 ms-3">
                        <span class="mb-0 font-weight-bolder">
                            Approve signatures
                        </span>
                    </div>
                </a>
            }

        </div>
    </div>
</div>


@code {

    [Parameter]
    public FounderProject FounderProject { get; set; }

    public bool InvestmentRequests { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RelayService.LookupSignaturesDirectMessagesForPubKeyAsync(FounderProject.ProjectInfo.NostrPubKey, FounderProject.LastRequestForSignaturesTime?.AddSeconds(1), 1,
            _ =>
            {
                if (InvestmentRequests)
                    return;

                InvestmentRequests = true;
                StateHasChanged();
            });
    }

 

    public MarkupString ConvertToMarkupString(string input)
    {
        string sanitizedInput = HtmlStripperService.StripHtmlTags(input);
        return new MarkupString(sanitizedInput);
    }
}