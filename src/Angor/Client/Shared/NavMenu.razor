@using Angor.Client.Storage
@using System.Reflection
@using Angor.Client.Services
@using Angor.Shared.Services
@inject IWalletStorage _walletStorage;
@inject NavMenuState NavMenuState;
@inject INetworkService _networkService;



 

    <div class="sidenav-header">
        <i class="fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none"
           aria-hidden="true" id="iconSidenav"></i>
        <a class="navbar-brand m-0" href="">
        <img src="/assets/img/angor-logo.svg" class="navbar-brand-img h-100" alt="Angor" />
            <span class="ms-1 font-weight-bold text-white">Angor App</span>
        </a>
    </div>

    <hr class="horizontal light mt-0 mb-2" />

    <div class="collapse navbar-collapse w-auto" id="sidenav-collapse-main">
        <ul class="navbar-nav">
            <li class="nav-item">
                <NavLink class="nav-link text-white" href="wallet">
                    <i class="material-icons opacity-10">wallet</i>
                    <span class="nav-link-text ms-1">Wallet</span>
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link text-white" href="browse">
                    <i class="material-icons opacity-10">search</i>
                    <span class="nav-link-text ms-1">Browse</span>
                </NavLink>
            </li>
 
       
 
            @if (hasWallet)
            {          
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="investor">
                        <i class="material-icons opacity-10">badge</i>
                        <span class="nav-link-text ms-1">Portfolio</span>
                    </NavLink>
                </li>
      
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="founder">
                        <i class="material-icons opacity-10">add_circle</i>
                        <span class="nav-link-text ms-1">Founder</span>
                    </NavLink>
                </li>
 
            }
 

            <li class="nav-item mt-3">
                <h6 class="ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8">
                    Settings
                </h6>
            </li>

            <li class="nav-item">
                <NavLink class="nav-link text-white" href="settings">
                    <i class="material-icons opacity-10">settings</i>
                    <span class="nav-link-text ms-1">Settings</span>
                </NavLink>
            </li>
 

 
        </ul>
    </div>

    <div class="sidenav-footer position-absolute w-100 bottom-0">
        <div class="mx-3">
            <a class="btn bg-gradient-primary w-100"
               href="https://browse.angor.io" type="button">
            Project Explorer
            </a>
        </div>
    </div>
 


@code {
    private bool collapseNavMenu = true;
    private bool hasWallet;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private Timer? _timer;
    private int _elapsedCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        hasWallet = _walletStorage.HasWallet();

        NavMenuState.OnChange += NavMenuStateOnOnChange;

    }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        _networkService.AddSettingsIfNotExist();

        await _networkService.CheckServices();

        await base.OnInitializedAsync();
    }

    private void NavMenuStateOnOnChange()
    {
        hasWallet = _walletStorage.HasWallet();
        StateHasChanged();
    }

    private void TimerElapsed(object state)
    {
        // for now we disable the timer because on each call to the indexer capture and update the sate on failures
        //_networkService.CheckServices();
    }

    /// <summary>
    /// Clean up the timer when the component is disposed
    /// </summary>
    public void Dispose()
    {
         
        _timer?.Dispose();
    }
}
