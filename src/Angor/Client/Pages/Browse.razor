@page "/browse"
@using Angor.Client.Services
@using Angor.Shared.Models
@using Angor.Shared.Services
@using Nostr.Client.Keys
@using Nostr.Client.Messages
@using System.Text.Json
@using Angor.Client.Models
@using Angor.Client.Storage
@inject ICacheStorage SessionStorage;
@inject NavigationManager NavigationManager
@inject IRelayService _RelayService
@inject IIndexerService _IndexerService
@inject IJSRuntime JS

<NotificationComponent @ref="notificationComponent" />

<div class="row">
    <div class="card card-body">
        <div class="d-flex align-items-center justify-content-between">
            <div class="d-flex col-auto my-auto">
                <span class="material-icons fs-1 opacity-10 btn-angor user-select-none">search</span>
                <div class="h-100 ms-3">
                    <h5 class="mb-1 font-weight-bolder">
                        Browse
                    </h5>
                    <p class="mb-0 font-weight-normal text-sm">
                        Browse Projects
                    </p>
                </div>
            </div>
            <div>
                @if (projects.Count > 0)
                {
                    <span role="button" class="material-icons fs-3 opacity-10 btn-angor user-select-none" @onclick="ToggleView">
                        @viewModeIcon
                    </span>
                }
            </div>
        </div>
    </div>
</div>
<div class="row mt-4">

    <div class="card card-body">
        <div class="d-flex align-items-center">
            <!-- Search Section -->
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Enter Angor project identifier" id="searchQuery" @bind="searchQuery" @onkeydown="HandleKeyDown">
                <button class="btn btn-primary" type="button" @onclick="SearchProject" disabled="@searchInProgress" data-cy="find-button">Find</button>
            </div>
        </div>
    </div>

</div>


@if (!projects.Any() && !searchInProgress)
{
    <div class="row mt-4">
        <div class="card card-body angor-alert-info pt-2 pb-2">
            <div class="d-flex align-items-center">
                <span class="material-icons opacity-10 fs-1 me-3 text-white user-select-none">
                    info
                </span>
                <span class="text-white" data-cy="projectsGrid">No projects found.</span>
            </div>
        </div>
    </div>
}
else
{

    @if (isGridView)
    {
        <div class="row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 project-wrapper" data-cy="project-grid">
            @foreach (var indexerData in projects.OrderByDescending(project => project.CreatedOnBlock))
            {
                <div class="col d-flex align-items-stretch">
                    <div class="card mt-4 w-100 project-card">
                        <a class="d-block blur-shadow-image">
                            @if (!nostrSearchInProgress && SessionStorage.IsProjectInStorageById(indexerData.ProjectIdentifier))
                            {
                                var project = SessionStorage.GetProjectById(indexerData.ProjectIdentifier);
                                <img class="card-img-top" src="@(project?.Metadata?.Banner ?? "/assets/img/no-image.jpg")" alt="@(project?.Metadata?.Banner != null ? "" : "no-image")" onerror="this.onerror=null; this.src='/assets/img/no-image.jpg';" />

                            }
                        </a>

                        <div class="card-body text-center">
                            @if (nostrSearchInProgress)
                            {
                                <div class="p-3">
                                    <div class="loader-small m-auto"></div>
                                </div>
                            }
                            else
                            {
                                @if (SessionStorage.IsProjectInStorageById(indexerData.ProjectIdentifier))
                                {
                                    var project = SessionStorage.GetProjectById(indexerData.ProjectIdentifier);
                                    if (project?.Metadata != null)
                                    {
                                        <h5 role="button" data-cy="searchedTitle" @onclick="() => ViewProjectDetails(indexerData.ProjectIdentifier)">@project.Metadata.Name</h5>
                                        <p class="mb-0 line-clamp-3" data-cy="searchedSubTitle"> @((MarkupString)project.Metadata.About)</p>
                                    }
                                }
                                else
                                {
                                    <p class="text-warning-emphasis">Project not found in any relay!</p>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="project-wrapper">
            @foreach (var indexerData in projects.OrderByDescending(project => project.CreatedOnBlock))
            {

                <div class="card mt-4 project-card ">
                    <div class="row g-0">
                        <div class="col-md-4">
                            <div class="img-responsive img-responsive-16by9 position-relative" role="button" @onclick="() => ViewProjectDetails(indexerData.ProjectIdentifier)">
                                @if (!nostrSearchInProgress && SessionStorage.IsProjectInStorageById(indexerData.ProjectIdentifier))
                                {
                                    var project = SessionStorage.GetProjectById(indexerData.ProjectIdentifier);
                                    <div class="card-header card-header-img">
                                        <img class="img-responsive-item" src="@(project?.Metadata?.Banner ?? "/assets/img/no-image.jpg")" alt="@(project?.Metadata?.Banner != null ? "" : "no-image")" onerror="this.onerror=null; this.src='/assets/img/no-image.jpg';" />
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-8 d-flex align-items-center justify-content-center position-relative">
                            <div class="card-body card-loader loading">

                                @if (nostrSearchInProgress)
                                {
                                    <div class="p-3">
                                        <div class="loader-small m-auto"></div>
                                    </div>
                                }
                                else
                                {
                                    @if (SessionStorage.IsProjectInStorageById(indexerData.ProjectIdentifier))
                                    {
                                        var project = SessionStorage.GetProjectById(indexerData.ProjectIdentifier);
                                        if (project?.Metadata != null)
                                        {
                                            <h5 class="card-title text-center" role="button" @onclick="() => ViewProjectDetails(indexerData.ProjectIdentifier)">@project.Metadata.Name</h5>
                                            <p class="card-text text-center line-clamp-3" role="button" @onclick="() => ViewProjectDetails(indexerData.ProjectIdentifier)">@((MarkupString)project.Metadata.About)</p>
                                        }
                                    }
                                    else
                                    {
                                        <p class="text-warning-emphasis">Project not found in any relay!</p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>


            }

        </div>


    }
}
@if (!searchInProgress)
{
    <div class="d-flex justify-content-center mt-4">
        <a class="btn btn-secondary my-3" href="https://browse.angor.io" target="_blank">
            <i class="material-icons opacity-10">search</i>
            <span class="nav-link-text ms-1">Project Explorer</span>
        </a>
    </div>
}
@if (searchInProgress)
{
    <div class="d-flex justify-content-center mt-4">
        <div class="loader"></div>
    </div>
}



@code {

    NotificationComponent notificationComponent;
    private string searchQuery;
    bool searchInProgress = false;
    bool nostrSearchInProgress;
     bool isGridView = true;
    string viewModeIcon = "grid_view";

    ProjectIndexerData? findProject = null;

    private List<ProjectIndexerData> projects = new();

    protected override async Task OnInitializedAsync()
    {
        projects = SessionStorage.GetProjectIndexerData() ?? new();
        if (!projects.Any())
        {
            await GetAllProjects();
        }
        // Handle '/' key press for focusing search input
        await JS.InvokeVoidAsync("angor.initSearchFocus", "searchQuery");
    }


    void ToggleView()
    {
        isGridView = !isGridView;
        viewModeIcon = isGridView ? "grid_view" : "view_list";
    }

    private async Task SearchProject()
    {
        if (string.IsNullOrEmpty(searchQuery))
        {
            await GetAllProjects();
            return;
        }

        findProject = projects.FirstOrDefault(_ => _.ProjectIdentifier == searchQuery);

        if (findProject != null)
        {
            projects = new List<ProjectIndexerData> { findProject };
            StateHasChanged();
            return;
        }

        searchInProgress = true;

        try
        {
            findProject = await _IndexerService.GetProjectByIdAsync(searchQuery);

            if (findProject != null)
            {
                _RelayService.RequestProjectCreateEventsByPubKey(HandleProjectEvents(), StateHasChanged, new[] { findProject.NostrPubKey });
                projects = new List<ProjectIndexerData> { findProject };
            }
            else
            {
                projects.Clear();
                StateHasChanged();
            }
        }
        finally
        {
            searchInProgress = false;
            StateHasChanged();
        }
    }


    private async Task GetAllProjects()
    {
        searchInProgress = true;

        var blockchainProjects = await _IndexerService.GetProjectsAsync(null, 21);

        var projectsNotInList = blockchainProjects
            .Where(blockchainProject => projects.All(_ => _.ProjectIdentifier != blockchainProject.ProjectIdentifier))
            .ToList();

        if (projectsNotInList.Any())
        {
            projects.AddRange(projectsNotInList.ToArray());
            SessionStorage.SetProjectIndexerData(projects);

            var projectsForLookup = projectsNotInList
                .Where(_ => _.NostrPubKey != null) //For old projects in the indexer
                .Select(_ => _.NostrPubKey)
                .ToArray();

            nostrSearchInProgress = true;

            if (projectsForLookup.Any())
                _RelayService.RequestProjectCreateEventsByPubKey(HandleProjectEvents(),
                    () =>
                {
                    nostrSearchInProgress = false;
                    StateHasChanged();
                },
                projectsForLookup);

            StateHasChanged();
        }

        searchInProgress = false;
    }

    private Action<NostrEvent> HandleProjectEvents()
    {
        return e =>
        {
            var projectIndexerData = projects.FirstOrDefault(x => x.NostrPubKey == e.Pubkey);

            if (projectIndexerData == null && findProject?.NostrPubKey == e.Pubkey)
            {
                projectIndexerData = findProject;
            }

            switch (e)
            {
                case { Kind: NostrKind.Metadata }:

                    var nostrMetadata = JsonSerializer.Deserialize<ProjectMetadata>(e.Content, Angor.Shared.Services.RelayService.settings);
                    if (projectIndexerData != null)
                    {
                        var project = SessionStorage.GetProjectById(projectIndexerData.ProjectIdentifier);
                        if (project != null)
                        {
                            project.Metadata = nostrMetadata;
                            SessionStorage.StoreProject(project);
                        }
                    }

                    break;

                case { Kind: NostrKind.ApplicationSpecificData }:

                    var projectInfo = JsonSerializer.Deserialize<ProjectInfo>(e.Content, Angor.Shared.Services.RelayService.settings);
                    if (projectInfo != null && projectIndexerData != null)
                    {
                        if (!SessionStorage.IsProjectInStorageById(projectInfo.ProjectIdentifier))
                        {
                            SessionStorage.StoreProject(new Project { ProjectInfo = projectInfo, CreationTransactionId = projectIndexerData.TrxId });
                        }
                    }

                    break;
            }
        };
    }

    private void ViewProjectDetails(string projectIdentifier)
    {
        if (SessionStorage.IsProjectInStorageById(projectIdentifier))
        {
            NavigationManager.NavigateTo($"/view/{projectIdentifier}");
        }
        else
        {
            notificationComponent.ShowNotificationMessage("The project was not loaded from the relay yet");
        }
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchProject();
        }
    }
}